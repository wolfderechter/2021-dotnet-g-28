@using _2021_dotnet_g_28.Models.Viewmodels;
@model ContractIndexViewModel

@{
    ViewData["Title"] = "Contracts";
}

<h1 class="">@ViewData["Title"]</h1>
<!-- showing filter in a form so you can post and filter on Duration and Status-->
<div class="row">
    <div class="col-lg-3 text-left">
        @using (Html.BeginForm())
        {
            <div class="form-group border border-dark">
                @Html.DisplayNameFor(model => model.CheckBoxItems[0].Status)
                @for (int i = 0; Model.CheckBoxItems.Count > i; i++)
                {
                    <div class="form-check border ">
                        @Html.CheckBoxFor(model => model.CheckBoxItems[i].IsSelected, new { htmlAttributes = new { @class = "form-check-input" } })
                        @Html.DisplayFor(model => model.CheckBoxItems[i].Status, new { htmlAttributes = new { @class = "form-check-label" } })
                        @Html.HiddenFor(model => model.CheckBoxItems[i].Status, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                }
            </div>
            <div class="form-group border  border-dark">
                @Html.DisplayNameFor(model => model.DuurCheckbox[0].Duration)
                @for (int i = 0; Model.DuurCheckbox.Count > i; i++)
                {
                    <div class="form-check border">
                        @Html.CheckBoxFor(model => model.DuurCheckbox[i].IsSelected, new { htmlAttributes = new { @class = "form-check-input" } })
                        @Html.DisplayFor(model => model.DuurCheckbox[i].Duration, new { htmlAttributes = new { @class = "form-check-label" } })
                        @Html.HiddenFor(model => model.DuurCheckbox[i].Duration, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                }
            </div>
            <button type="submit" class="btn btn-primary ml-1">Filter</button>
        }
    </div>
    <!--table that will showing all the items that accept the filter-->
    <div class="col-lg-9">
        <table class="table">
            <thead class="thead-light">
                <tr class="bg-primary">
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts.ElementAt(1).ContractNr)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts.ElementAt(1).Status)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts.ElementAt(1).Type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts.ElementAt(1).EndDate)
                    </th>
                    <th class="text-left">
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody class="table-hover">
                @foreach (var item in Model.Contracts)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ContractNr)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td>
                            <button class="btn btn-warning btn-sm">
                                @Html.ActionLink("Details", "Details", new { contractNr = @item.ContractNr })
                            </button>
                            <a class="btn btn-danger btn-sm" data-target="#confirm-delete" data-toggle="modal" data-item-id="@item.ContractNr">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<p>
    <a class="btn btn-success" asp-action="Create">Create New Contract</a>
</p>

<!--modal that's gonna show the delete confirmation-->
<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">cancel</button>
                <input type="submit" value="Delete" class="btn btn-danger btn-ok" />
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        
        $('#confirm-delete').on('click', '.btn-ok', function (event) {
            var $modalDiv = $(event.delegateTarget);
            var id = $(this).data('itemId');
            $.ajax({
                url: '/Contract/Delete/' + id,
                type: 'DELETE',
                success: function (result) {
                    window.location.reload();
                }
            });
        });

        $('#confirm-delete').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var contractid = button.data('item-id') //getting contractid from modal
            // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
            var modal = $(this)
            modal.find('.modal-body').text("Are you sure you wanna delete the contract with contractNr " + contractid)
            $('.btn-ok', this).data('itemId', contractid);
        })

    </script>
}

