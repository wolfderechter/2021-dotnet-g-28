@model IEnumerable<_2021_dotnet_g_28.Models.Domain.Contract>

@{
    ViewData["Title"] = "Contracts";
}
<div class="container">
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">cancel</button>
                    <a class="btn btn-danger" asp-controller="Contract" asp-action="Delete" asp-route-contractNr="1">Delete</a>
                </div>
            </div>
        </div>
    </div>
    <h1 class="">@ViewData["Title"]</h1>
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ContractNr)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EndDate)
                </th>
                <th class="text-left">
                    Actions
                </th>
            </tr>
        </thead>
        <!-- Accordion -->
        <tbody class="table-hover">
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ContractNr)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDate.Date)
                    </td>
                    <td>
                        <button class="btn btn-square btn-primary">
                            @Html.ActionLink("Edit", "Edit", new { id = @item.ContractNr })
                        </button>
                        <button class="btn btn-square btn-warning">
                            @Html.ActionLink("Details", "Details", new { id = @item.ContractNr })
                        </button>
                        <a class="btn btn-danger" data-target="#deleteModal" role="button" data-toggle="modal" data-id="@item.ContractNr" >Delete</a>
                    </td>
                </tr>
            }

        </tbody>
    </table>

</div>
<p>
    <a asp-action="Create">Create New Contract</a>
</p>
@section scripts {
    <script>
        $('#deleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var contractid = button.data('id')
            
            // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
            modal.find('.modal-body').text("Are you sure you wanna delete the contract with contractNr " + contractid)
            modal.find('.btn-danger').attr('asp-route-id', contractid);
        })
        
    </script>
}

