@using _2021_dotnet_g_28.Models.Viewmodels;
@using _2021_dotnet_g_28.Models.Domain;
@model TicketIndexViewModel
@section Styles {
    <link href="~/css/TicketIndex.css" rel="stylesheet" />
}

@{ ViewData["Title"] = "Tickets"; }


<h1>@ViewData["Title"]</h1>





<div class="row">
    <div class="col-lg-3 text-left">
        @using (Html.BeginForm())
        {
<div class="form-group border border-dark">
    @Html.DisplayNameFor(model => model.CheckBoxItems[0].Status)
    @for (int i = 0; Model.CheckBoxItems.Count > i; i++)
    {
<div class="form-check border ">
    @Html.CheckBoxFor(model => model.CheckBoxItems[i].IsSelected, new { htmlAttributes = new { @class = "form-check-input" } })
    @Html.DisplayFor(model => model.CheckBoxItems[i].Status, new { htmlAttributes = new { @class = "form-check-label" } })
    @Html.HiddenFor(model => model.CheckBoxItems[i].Status, new { htmlAttributes = new { @class = "form-control" } })
</div>          }
</div>

                <button type="submit" class="btn btn-primary ml-1">Filter</button>
                                <a asp-controller="Ticket" asp-action="Create" class="btn btn-primary text-decoration-none">Create New Ticket</a>}


    </div>

    <div id="accordion" class="col-lg-9 pr-lg-4">
        @foreach (var item in Model.Tickets)
        {
<div class="card @(item.Type == TicketEnum.type.NoImpact ? "border-no-impact" : item.Type == TicketEnum.type.ProductionStopped ? "border-production-stopped" : item.Type == TicketEnum.type.ProductionWillStop ? "border-production-will-stop" : "") mr-3">
    <div class="card-header" id="heading@(item.TicketNr)">
        <h5 class="mb-0">
            <button class="btn btn-link w-100 text-decoration-none text-dark" data-toggle="collapse" data-target="#collapse@(item.TicketNr)" aria-expanded="true" aria-controls="collapse@(item.TicketNr)">
                <div class="row">
                    <div class="col">
                        @item.TicketNr
                    </div>
                    <div class="col">
                        @item.Title
                    </div>
                    <div class="col">
                        @Html.DisplayFor(model => item.Status)
                    </div>
                </div>
            </button>
        </h5>
    </div>

    <div id="collapse@(item.TicketNr)" class="collapse" aria-labelledby="heading@(item.TicketNr)" data-parent="#accordion">
        <div class="card-body">
            <div class="row">
                <div class="col">
                    <p>Date created: @item.DateCreation</p>
                    <p>Type: @Html.DisplayFor(model => item.Type)</p>
                    <p>Assigned technician: </p>
                    @*<p>Remarks: @item.Remark</p>*@
                    @{ if (item.PicturePath == null)
                        {
        <p>Attachment: No attachment </p> }
    else
    {
<p>Attachment: </p>
                    <img class="img-thumbnail small" src="~/bijlagen/@item.PicturePath"> } }
                </div>
                <div class="col">
                    <p>Description: </p>@item.Description
                </div>
            </div>

            @foreach (var reaction in item.Reactions)
            {
                if (reaction.ReactionSup)
                {
<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text bg-primary rounded-pill text-white mr-2" id="">@reaction.NameUserReaction</span>
    </div>
    <input type="text" class="form-control rounded-pill " disabled value="@reaction.Text">
</div> }
else
{
<div class="row input-group mb-3">
    <input type="text" class="form-control rounded-pill text-right" disabled value="@reaction.Text">
    <div class="input-group-prepend">
        <span class="input-group-text bg-primary rounded-pill text-white ml-2" id="">@reaction.NameUserReaction</span>
    </div>
</div>}


                }
            @using (@Html.BeginForm("AddReaction", "Ticket", FormMethod.Post))
            {
<div class="row">
    <div class="btn-group w-100" role="toolbar">
        <a asp-controller="Ticket" asp-action="Edit" asp-route-ticketnr="@item.TicketNr" class="btn btn-primary col-md-2 col-sm-3">Edit</a>
        @*<a asp-controller="Ticket" asp-action="Delete" asp-route-ticketnr="@item.TicketNr" class="btn btn-danger col-md-2 col-sm-3">Cancel</a>*@
        @if (item.Status != TicketEnum.status.Cancelled)
        {
            <a class="btn btn-danger text-white" data-target="#confirm-delete" data-toggle="modal" data-item-id="@item.TicketNr">Cancel</a>
        }
        <input type="text" name="reaction" class=" col-md-9 col-sm-3" placeholder="Type reaction here" required>
        <input type="hidden" name="model" value="@Model">
        <input type="hidden" name="ticketNr" value="@item.TicketNr">
        <button class="btn btn-primary col-md-2 col-sm-3" type="submit">React</button>

    </div>
</div>}
        </div>
    </div>
</div>}
    </div>

</div>



<!--modal that's gonna show the cancel confirmation-->
<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Cancel</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <input type="submit" value="Yes" class="btn btn-danger btn-ok" />
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $('#confirm-delete').on('click', '.btn-ok', function (event) {
            var $modalDiv = $(event.delegateTarget);
            var id = $(this).data('itemId');
            $.ajax({
                url: '/Ticket/Delete/' + id,
                type: 'DELETE',
                success: function (result) {
                    window.location.reload();
                }
            });
        });

        $('#confirm-delete').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var ticketid = button.data('item-id') //getting ticketid from modal

            var modal = $(this)
            modal.find('.modal-body').text("Are you sure you wanna cancel the ticket with ticketNr " + ticketid)
            $('.btn-ok', this).data('itemId', ticketid);
        })
    </script>
}
