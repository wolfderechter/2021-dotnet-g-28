<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Acties</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>Applicatie</value>
  </data>
  <data name="AssignedTechnician" xml:space="preserve">
    <value>Toegewezen technieker</value>
  </data>
  <data name="Attachment" xml:space="preserve">
    <value>Bijlage</value>
  </data>
  <data name="Availability" xml:space="preserve">
    <value>Beschikbaarheid</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Terug naar de lijst</value>
  </data>
  <data name="BusinessHoursApp" xml:space="preserve">
    <value>Werkuren App</value>
  </data>
  <data name="BusinessHoursEmail" xml:space="preserve">
    <value>Werkuren E-mail</value>
  </data>
  <data name="BusinessHoursPhone" xml:space="preserve">
    <value>Werkuren Telefoon</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>geannuleerd</value>
  </data>
  <data name="ChooseOneOfContractType" xml:space="preserve">
    <value>Kies een van de contractypes hieronder getoond</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Gesloten</value>
  </data>
  <data name="ConfirmCancel" xml:space="preserve">
    <value>Bevestig annulatie</value>
  </data>
  <data name="ConfirmCancelString" xml:space="preserve">
    <value> Bent u zeker dat u het contract wilt annuleren met contractNr</value>
  </data>
  <data name="ContractNr" xml:space="preserve">
    <value>ContractNr</value>
  </data>
  <data name="Contracts" xml:space="preserve">
    <value>Contracten</value>
  </data>
  <data name="ContractType" xml:space="preserve">
    <value>Contract type</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Aangemaakt</value>
  </data>
  <data name="CreateNewContract" xml:space="preserve">
    <value>Maak nieuw contract</value>
  </data>
  <data name="CreateNewTicket" xml:space="preserve">
    <value>Maak nieuw ticket</value>
  </data>
  <data name="CreateTicket" xml:space="preserve">
    <value>Maak ticket</value>
  </data>
  <data name="CreationMethod" xml:space="preserve">
    <value>Aanmaak methode</value>
  </data>
  <data name="DateCreated" xml:space="preserve">
    <value>Datum aanmaak</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschrijving</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DetailsContract" xml:space="preserve">
    <value>Details contract</value>
  </data>
  <data name="Discontinued" xml:space="preserve">
    <value>Stopgezet</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duur</value>
  </data>
  <data name="DurOfContract" xml:space="preserve">
    <value>Duration of contract in years (1,2 or 3) Duur van contract in jaren (1,2 of 3)</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Wijzig</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>Eind datum</value>
  </data>
  <data name="Ended" xml:space="preserve">
    <value>Beëindigd</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="InDevelopment" xml:space="preserve">
    <value>In ontwikkeling</value>
  </data>
  <data name="InProg" xml:space="preserve">
    <value>In uitvoering</value>
  </data>
  <data name="MaxReponseTime" xml:space="preserve">
    <value>Max. antwoord tijd </value>
  </data>
  <data name="MinDuration" xml:space="preserve">
    <value>Min. Duur</value>
  </data>
  <data name="NameContract" xml:space="preserve">
    <value>Naam contract</value>
  </data>
  <data name="NoAttachment" xml:space="preserve">
    <value>Geen bijlage</value>
  </data>
  <data name="NoProdImpact" xml:space="preserve">
    <value>Geen productie impact (&lt;3d oplossing)</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Wachtwoord</value>
  </data>
  <data name="PlsSignIn" xml:space="preserve">
    <value>Gelieve in te loggen</value>
  </data>
  <data name="Price/month" xml:space="preserve">
    <value>Prijs/maand</value>
  </data>
  <data name="ProdImpacted" xml:space="preserve">
    <value>Productie impact (&lt;2h oplossing)</value>
  </data>
  <data name="ProdWillStop" xml:space="preserve">
    <value>Productie zal stoppen (&lt;4h oplossing)</value>
  </data>
  <data name="React" xml:space="preserve">
    <value>Reageren</value>
  </data>
  <data name="ReceivedResp" xml:space="preserve">
    <value>Antwoord ontvangen</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Onthoud mij</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>Lopend</value>
  </data>
  <data name="SelectTypeTicket" xml:space="preserve">
    <value>Kies type ticket</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Meld aan</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start datum</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telefoon</value>
  </data>
  <data name="Tickets" xml:space="preserve">
    <value>Tickets </value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Gebruikersnaam</value>
  </data>
  <data name="WaitForResponsCust" xml:space="preserve">
    <value>Wachtend op antwoord klant</value>
  </data>
  <data name="WeekendApp" xml:space="preserve">
    <value>Weekend App</value>
  </data>
  <data name="WeekendMail" xml:space="preserve">
    <value>Weekend E-mail</value>
  </data>
  <data name="WeekendPhone" xml:space="preserve">
    <value>Weekend Telefoon</value>
  </data>
</root>