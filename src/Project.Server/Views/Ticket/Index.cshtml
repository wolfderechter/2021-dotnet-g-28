@using _2021_dotnet_g_28.Models.Viewmodels;
@using _2021_dotnet_g_28.Models.Domain;
@model TicketIndexViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@section Styles {
    <link href="~/css/TicketIndex.css" rel="stylesheet" />
}

@{
    ViewData["Title"] = "Tickets";


}


<h1>@ViewData["Title"]</h1>




<div class="container-fluid mt-4">

    <div class="row">
        <div class="col-xl-3 text-left mb-3 w-50">
            @using (Html.BeginForm(FormMethod.Post))
            {
                <div class="form-group border border-dark">
                    <div class="text-center">
                        @Html.DisplayNameFor(model => model.CheckBoxItemsStatus[0].Status)
                    </div>
                    @for (int i = 0; Model.CheckBoxItemsStatus.Count > i; i++)
                    {
                        <div class="form-check border ">
                            @Html.CheckBoxFor(model => model.CheckBoxItemsStatus[i].IsSelected, new { htmlAttributes = new { @class = "form-check-input" }, onChange = "this.form.submit()" })
                            @Html.DisplayFor(model => model.CheckBoxItemsStatus[i].Status, new { htmlAttributes = new { @class = "form-check-label" } })
                            @Html.HiddenFor(model => model.CheckBoxItemsStatus[i].Status, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    }
                </div>
                <div class="form-group border border-dark">
                    <div class="text-center">
                        @Html.DisplayNameFor(model => model.CheckBoxItemsType[0].Type)
                    </div>
                        @for (int i = 0; Model.CheckBoxItemsType.Count > i; i++)
                        {
                            <div class="form-check border">
                                @Html.CheckBoxFor(model => model.CheckBoxItemsType[i].IsSelected, new { htmlAttributes = new { @class = "form-check-input" }, onChange = "this.form.submit()" })
                                @Html.DisplayFor(model => model.CheckBoxItemsType[i].Type, new { htmlAttributes = new { @class = "form-check-label" } })
                                @Html.HiddenFor(model => model.CheckBoxItemsType[i].Type, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        }

                    </div>
                    //<button type="submit" class="btn btn-primary ml-1">Filter</button>
                    <a asp-controller="Ticket" asp-action="Create" class="btn btn-primary text-decoration-none">Create New Ticket</a>

                    }
                </div>

        <div id="accordion" class="col-xl-9 pr-0">
            @if ((bool)ViewData["noTickets"])
            {
                <h1>No tickets available</h1>
            }
            else
            {
                @foreach (var item in Model.Tickets)
                {
                    <div class="card @(item.Type == TicketEnum.Type.NoImpact ? "border-no-impact" : item.Type == TicketEnum.Type.ProductionStopped ? "border-production-stopped" : item.Type == TicketEnum.Type.ProductionWillStop ? "border-production-will-stop" : "") mr-3">
                        <div class="card-header" id="heading@(item.TicketNr)">
                            <h5 class="mb-0">
                                <button class="btn btn-link w-100 text-decoration-none text-dark" data-toggle="collapse" data-target="#collapse@(item.TicketNr)" aria-expanded="true" aria-controls="collapse@(item.TicketNr)">
                                    <div class="row">
                                        <div class="col">
                                            @item.TicketNr
                                        </div>
                                        <div class="col">
                                            @item.Title
                                        </div>
                                        <div class="col">
                                            @Html.DisplayFor(model => item.Status)
                                        </div>
                                    </div>
                                </button>
                            </h5>
                        </div>

                    <div id="collapse@(item.TicketNr)" class="@(Model.OpenedTicket != null?Model.OpenedTicket.Equals(item)?"collapse show":"collapse":"collapse")" aria-labelledby="heading@(item.TicketNr)" data-parent="#accordion">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <p>Date created: @item.DateCreation</p>
                                    <p>Type: @Html.DisplayFor(model => item.Type)</p>
                                    <p>Assigned technician: </p>
                                    @{ if (item.Attachments.Count < 1)
                                        {
                                            <p>Attachment: No attachment </p> }
                                        else
                                        {
                                            <p>Attachment: </p>
                                            @foreach (var attachm in @item.Attachments)
                                            {
                                                <a class="text-decoration-none btn btn-outline-primary mb-2" asp-controller="Ticket" asp-action="Download" asp-route-filename="@attachm">@attachm.Substring(attachm.IndexOf("_") + 1)</a>
                                            }
                                        }
                                    }
                                </div>
                                <div class="col">
                                    <p>Description: @item.Description</p>
                                </div>
                            </div>

                                @foreach (var reaction in item.Reactions)
                                {
                                    if (reaction.ReactionSup)
                                    {
                                        <div class="col-md-12 mb-1 d-inline-flex">
                                            <p class=" bg-primary rounded-pill text-white p-2 mr-2 border">
                                                @reaction.NameUserReaction
                                            </p>
                                            <p class=" rounded-pill p-2 border gray-bg">
                                                @reaction.Text
                                            </p>
                                        </div>
                                    }
                                    else
                                    {

                                        <div class="col-md-12 mb-3 text-right d-inline-flex flex-row-reverse">
                                            <p class=" bg-primary rounded-pill text-white p-2 ml-2 border text-nowrap fit-content">
                                                @reaction.NameUserReaction
                                            </p>
                                            <p class=" rounded-pill p-2 border gray-bg">
                                                @reaction.Text
                                            </p>
                                        </div>
                                    }
                                }
                                @using (@Html.BeginForm("AddReaction", "Ticket", FormMethod.Post))
                                {
                                    <div class="row">
                                        <div class="btn-group w-100" role="toolbar">

                                        @if (!User.IsInRole("SupportManager"))
                                        {
                                            @*<a asp-controller="Ticket" asp-action="Stop" asp-route-ticketnr="@item.TicketNr" class="btn btn-danger col-md-2 col-sm-3">Cancel</a>*@
                                            @if (item.Status != TicketEnum.Status.Cancelled)
                                            {
                                                <a asp-controller="Ticket" asp-action="Edit" asp-route-ticketnr="@item.TicketNr" class="btn btn-primary col-md-2 col-sm-3">Edit</a>
                                                <a class="btn btn-danger col-md-2 col-sm-3 text-white" data-target="#confirm-delete" data-toggle="modal" data-item-id="@item.TicketNr">Cancel</a>
                                            }
                                            <input type="text" name="reaction" class=" col-md-9 col-sm-3" placeholder="Type reaction here" required>
                                            <input type="hidden" name="ticketNr" value="@item.TicketNr">
                                            <button class="btn btn-primary col-md-2 col-sm-3" type="submit">React</button>
                                        }

                                    </div>
                                    </div>

                                }
                            </div>
                        </div>
                    </div>

                }
            }

        </div>

    </div>
</div>



<!--modal that's gonna show the cancel confirmation-->
<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Confirm Cancel"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["No"]</button>
                <input type="submit" value="Yes" class="btn btn-danger btn-ok" />
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $('#confirm-delete').on('click', '.btn-ok', function (event) {
            var $modalDiv = $(event.delegateTarget);
            var id = $(this).data('itemId');
            $.ajax({
                url: '/Ticket/Delete/' + id,
                type: 'DELETE',
                success: function (result) {
                    window.location.reload();
                }
            });
        });

        $('#confirm-delete').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var ticketid = button.data('item-id') //getting ticketid from modal

            var modal = $(this)
            modal.find('.modal-body').text("Are you sure you wanna cancel the ticket with ticketNr " + ticketid)
            $('.btn-ok', this).data('itemId', ticketid);
        })
    </script>
}
